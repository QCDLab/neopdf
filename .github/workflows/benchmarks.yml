name: Run benchmarks

on:
  pull_request:
    types: [labeled]

permissions:
  pull-requests: write

jobs:
  benchmark:
    if: github.event.label.name == 'benchmark'
    name: Run criterion benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Get data
        uses: ./.github/actions/cache-data

      - name: Cache Criterion baseline
        uses: actions/cache@v4
        with:
          path: target/criterion
          key: criterion-benchmark-${{ runner.os }}-${{ github.ref }}
          restore-keys: |
            criterion-benchmark-${{ runner.os }}-refs/heads/main

      - name: Run benchmarks and save clean output
        id: bench
        run: |
          export NEOPDF_DATA_PATH=${PWD}/neopdf-data
          # The awk command filters out the verbose test summary before the benchmark results.
          cargo bench -p neopdf -- --nocapture | awk '/^test result: ok\./ {p=1; next} p' | tee benchmark_results.txt

      - name: Post benchmark results as a PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('benchmark_results.txt', 'utf8').trim();

            if (output) {
              const body = '## ðŸš€ Benchmark Results ðŸš€\n\n' +
                           'Here are the results from the benchmark run.\n\n' +
                           '```\n' +
                           output + '\n' +
                           '```';

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            } else {
              console.log("Benchmark output was empty.");
            }
